{
	"info": {
		"_postman_id": "75d1daf3-2a78-4a29-a980-14101e5b4084",
		"name": "Data_Validation",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Create Employee validation",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();\r",
							"\r",
							"pm.test('Employee inserted age equals 323', function() {\r",
							"  pm.expect(jsonData.data).to.have.property('age') == pm.variables.get(\"age\");\r",
							"});\r",
							"pm.test('Employee inserted name equals Jankos1', function() {\r",
							"  pm.expect(jsonData.data).to.have.property('name') == pm.variables.get(\"name\");\r",
							"});\r",
							"pm.test('Employee inserted salary equals 250', function() {\r",
							"  pm.expect(jsonData.data).to.have.property('salary') == pm.variables.get(\"salary\");\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\":{{name}},\r\n    \"salary\":{{salary}},\r\n    \"age\":{{age}}\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url}}/api/v1/create",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"api",
						"v1",
						"create"
					]
				}
			},
			"response": []
		},
		{
			"name": "All Employee validation",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();\r",
							"\r",
							"pm.test('Object of employees is returned', function() {\r",
							"  pm.expect(jsonData).to.have.property('data');\r",
							"});\r",
							"\r",
							"pm.test('Object contains ID key', function() {\r",
							"  pm.expect(jsonData.data[0]).to.have.property('id');\r",
							"});\r",
							"\r",
							"pm.test('Employee of ID: 1 exists', function() {\r",
							"  pm.expect(jsonData.data[0]).to.have.property('id') == 1;\r",
							"});\r",
							"\r",
							"pm.test('Employee with age 36 exists', function() {\r",
							"  pm.expect(jsonData.data[0]).to.have.property('employee_age') == 36;\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{base_url}}/api/v1/employees",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"api",
						"v1",
						"employees"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update Employee validation",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();\r",
							"\r",
							"pm.test(\"Name updated to Crpyto\", function() {\r",
							"  pm.expect(jsonData.data).to.have.property('name') == pm.variables.get(\"new_name\");\r",
							"});\r",
							"pm.test(\"Salary updated to 3000\", function() {\r",
							"  pm.expect(jsonData.data).to.have.property('salary') == pm.variables.get(\"new_salary\");\r",
							"});\r",
							"pm.test(\"Age updated to 44\", function() {\r",
							"  pm.expect(jsonData.data).to.have.property('salary') == pm.variables.get(\"new_age\");\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\":{{new_name}},\r\n    \"salary\":{{new_salary}},\r\n    \"age\":{{new_age}}\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url}}/api/v1/update/2",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"api",
						"v1",
						"update",
						"2"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Employee validation",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();\r",
							"\r",
							"pm.test('Update age contains information', function() {\r",
							"  pm.expect(jsonData.data).to.have.property('employee_age');\r",
							"});\r",
							"pm.test('Updated salary contains information', function() {\r",
							"  pm.expect(jsonData.data).to.have.property('employee_salary');\r",
							"});\r",
							"pm.test('Updated name contains information', function() {\r",
							"  pm.expect(jsonData.data).to.have.property('employee_name');\r",
							"});\r",
							"\r",
							"const response = pm.response.json();\r",
							"\r",
							"pm.test(\"Sucess in response\", function () {\r",
							"    pm.expect(response).property(\"status\", \"success\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{base_url}}/api/v1/employee/2",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"api",
						"v1",
						"employee",
						"2"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete employee Validation",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();\r",
							"\r",
							"pm.test(\"Delete success\", function() {\r",
							"  var jsonData = pm.response.json();\r",
							"  pm.expect(jsonData.status).to.equal(\"success\");\r",
							"});\r",
							"pm.test(\"Deleted data record (ID)\", function() {\r",
							"  var jsonData = pm.response.json();\r",
							"  pm.expect(jsonData.data).to.equal(\"2\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{base_url}}/api/v1/delete/2",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"api",
						"v1",
						"delete",
						"2"
					]
				}
			},
			"response": []
		}
	]
}